package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.37

import (
	"context"
	"fmt"
	"test1/graph/model"
)

// CreateUser is the resolver for the createUser field.
func (r *mutationResolver) CreateUser(ctx context.Context, input model.NewUser) (*model.User, error) {
	user, err := r.s.AddUser(ctx, input)
	if err != nil {
		return nil, err
	}
	return user, nil
}

// GetUser is the resolver for the getUser field.
func (r *mutationResolver) GetUser(ctx context.Context, input model.GetUser) (*model.User, error) {
	user, err := r.s.GetUserById(ctx, input.ID)
	if err != nil {
		return nil, err
	}
	return user, nil
}

// DeleteUser is the resolver for the deleteUser field.
func (r *mutationResolver) DeleteUser(ctx context.Context, input model.DeleteUser) (*model.User, error) {
	user, err := r.s.DeleteUserById(ctx, input.ID)
	if err != nil {
		return nil, err
	}
	return user, nil
}

// ChangeUser is the resolver for the changeUser field.
func (r *mutationResolver) ChangeUser(ctx context.Context, input model.ChangeUser) (*model.User, error) {
	r.s.ChangeUserById(ctx, input)
	user := &model.User{
		ID:         input.ID,
		Name:       input.Name,
		Surname:    input.Surname,
		Patronymic: input.Patronymic,
		Age:        input.Age,
		Gender:     input.Gender,
		Country:    []*model.Country{},
	}
	return user, nil
}

// Users is the resolver for the users field.
func (r *queryResolver) Users(ctx context.Context) ([]*model.User, error) {
	users, err := r.s.GetUsers(ctx)
	if err != nil {
		return nil, err
	}
	return users, nil
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }

// !!! WARNING !!!
// The code below was going to be deleted when updating resolvers. It has been copied here so you have
// one last chance to move it out of harms way if you want. There are two reasons this happens:
//   - When renaming or deleting a resolver the old code will be put in here. You can safely delete
//     it when you're done.
//   - You have helper methods in this file. Move them out to keep these resolver files clean.
func (r *mutationResolver) User(ctx context.Context) (*model.User, error) {
	panic(fmt.Errorf("not implemented: User - user"))
}
func (r *queryResolver) ID(ctx context.Context) (string, error) {
	panic(fmt.Errorf("not implemented: ID - id"))
}
