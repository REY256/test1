type Country {
  country_id: String!
  probability: Float!
}

type User {
  id: ID!
  name: String!
  surname: String!
  patronymic: String!
  age: Int!
  gender: String!
  country: [Country!]!
}

input NewUser {
  id: ID!
  name: String!
  surname: String!
  patronymic: String!
}

input ChangeUser {
  id: ID!
  name: String!
  surname: String!
  patronymic: String!
}

type Query {
  users: [User!]!
}

input DeleteUser {
  id: ID!
}

type Mutation {
  createUser(input: NewUser!): User!
  deleteUser(input: DeleteUser!): User!
  changeUser(input: ChangeUser!): User!
}
